"""
Given an integer array nums, return true if any value appears at least twice in the array,
 and return false if every element is distinct.

Example 1:

Input: nums = [1,2,3,1]
Output: true
Example 2:

Input: nums = [1,2,3,4]
Output: false
Example 3:

Input: nums = [1,1,1,3,3,4,3,2,4,2]
Output: true
 

Constraints:

1 <= nums.length <= 105
-109 <= nums[i] <= 109

"""

from typing import List

class Solution:
    #brute force approach - Time complexity O(N^2), Constant Space complexity
    def containsDuplicate(self, nums: List[int]) -> bool:
        for i in range(len(nums)):
            for j in range(0,i):
                if nums[i]==nums[j]:
                    return True
        return False

    #sorted list - Time complexity O(NlogN), Constant Space complexity
    def containsDuplicateSortedList(self, nums: List[int]) -> bool:
        nums = sorted(nums)
        for i in range(1,len(nums)):
            if nums[i]==nums[i-1]:
                return True
        return False

    #hashset - Time complexity O(N), Space complexity O(N)
    def containsDuplicateHashSet(self, nums: List[int]) -> bool:
        s = set()
        for i in nums:
            if i in s:
                return True
            s.add(i)
        return False

s=Solution()
#print(s.containsDuplicate([2,3,4,2]))
#print(s.containsDuplicateSortedList([2,3,4,7]))
print(s.containsDuplicateHashSet([2,3,4,7,2]))